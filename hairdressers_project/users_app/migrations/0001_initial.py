# Generated by Django 4.0.3 on 2022-04-01 09:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='город')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50, verbose_name='навык')),
            ],
            options={
                'verbose_name': 'Навык',
                'verbose_name_plural': 'Навыки',
            },
        ),
        migrations.CreateModel(
            name='SimpleUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=30, verbose_name='логин')),
                ('name', models.CharField(max_length=50, verbose_name='имя')),
                ('surname', models.CharField(blank=True, max_length=50, verbose_name='фамилия')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='адрес эл. почты')),
                ('avatar', models.ImageField(blank=True, upload_to='avatars/%Y/%m/%d/', verbose_name='фото профиля')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('is_hairdresser', models.BooleanField(default=False, verbose_name='парикмахер')),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Пользователя',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='Hairdresser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='имя')),
                ('surname', models.CharField(max_length=50, verbose_name='фамилия')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='номер телефона')),
                ('email', models.EmailField(max_length=254, verbose_name='фдрес эл. почты')),
                ('avatar', models.ImageField(blank=True, upload_to='avatars/%Y/%m/%d/', verbose_name='фото профиля')),
                ('rating', models.IntegerField(default=1, verbose_name='рейтинг')),
                ('instagram', models.URLField(blank=True, max_length=255, verbose_name='инстаграм')),
                ('another_info', models.TextField(blank=True, max_length=1000, verbose_name='дополнительная информация')),
                ('portfolio', models.ImageField(blank=True, upload_to='portfolio/%Y/%m/%d/', verbose_name='портфолио')),
                ('date_of_registration', models.DateField(auto_now_add=True, verbose_name='дата регистрации')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='users_app.city')),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users_app.simpleuser')),
                ('skills', models.ManyToManyField(blank=True, to='users_app.skill', verbose_name='навыки')),
            ],
            options={
                'verbose_name': 'Парикмахера',
                'verbose_name_plural': 'Парикмахеры',
            },
        ),
    ]
